<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="processButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>